name: CI Maestro

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  maestro-tests:
    runs-on: ubuntu-latest
    env:
      MAESTRO_CLI_NO_ANALYTICS: "true"

    steps:
      # 1Ô∏è‚É£ Pega o c√≥digo
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Configura Java 17
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3Ô∏è‚É£ Configura Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'

      # 4Ô∏è‚É£ Instala depend√™ncias Flutter
      - name: Get Flutter dependencies
        run: flutter pub get

      # 5Ô∏è‚É£ Instala Maestro CLI
      - name: Install Maestro CLI
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH

      # 6Ô∏è‚É£ Instala Android SDK + emulador + system image
      - name: Install Android SDK & Emulator
        run: |
          yes | sdkmanager --install "platform-tools" "emulator" "platforms;android-33" "system-images;android-33;google_apis;x86_64"
          echo "no" | avdmanager create avd -n test -k "system-images;android-33;google_apis;x86_64" --force

      # 7Ô∏è‚É£ Inicializa o emulador em background
      - name: Start Emulator
        run: |
          $ANDROID_HOME/emulator/emulator -avd test -no-window -no-audio &
          adb wait-for-device
          adb shell input keyevent 82

      # 8Ô∏è‚É£ Build Flutter APK (debug)
      - name: Build Flutter APK (debug)
        run: flutter build apk --debug

      # 9Ô∏è‚É£ Executa os testes Maestro
      - name: Run Maestro Tests
        run: |
          maestro test test/flows/login.yaml --format junit --output results.xml

      # üîü Upload results
      - name: Upload Maestro Test Results
        uses: actions/upload-artifact@v4
        with:
          name: maestro-results
          path: results.xml
